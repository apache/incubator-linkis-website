{
  "message": {
    "common": {
      "get_start": "开始",
      "description": "描述",
      "learn_more": "了解更多",
      "core_features": "核心功能",
      "connectivity": "连通性",
      "scalability": "可扩展性",
      "controllability": "可控性",
      "orchestration": "编排",
      "reusability": "可复用性",
      "our_users": "我们的用户",
      "read_more": "阅读更多",
      "download":"下载",
      "releaseDate": "发布日期",
      "newFeatures":"新增特性",
      "enhancement":"增强点",
      "bugFixs":"BUG修复",
      "changeLog":"详细变更"
    },
    "home": {
      "banner": {
        "slogan": "通过构建计算中间件层来解耦上层应用程序和底层数据引擎"
      },
      "introduce": {
        "title": "计算治理理念",
        "before": "没有Linkis之前",
        "after": "有Linkis之后",
        "before_text": "每个上层应用以紧耦合的方式直接连接和访问各种底层引擎，这使得大数据平台成为一个复杂的网络架构",
        "after_text": "在丰富的上层应用和丰富的底层引擎之间构建一个公共的“计算中间件”层，以标准化的可复用方式解决这些复杂的连接问题"
      },
      "description": {
        "paragraph1": "Linkis 提供标准化接口（REST、JDBC、WebSocket 等），方便连接各种底层引擎（Spark、Presto、Flink 等），充当上层应用层和底层引擎层之间的代理",
        "paragraph2": "Linkis 能够促进 OLAP、OLTP（开发）、Streaming 等不同类型引擎的连接、治理和编排能力，并以标准化的可重用方式处理所有这些“计算治理”事务."
      },
      "core": {
        "connectivity": "简化操作环境；上层和下层解耦，使上层在底层变化时不敏感",
        "scalability": "分布式微服务架构，具有很好的可伸缩性和扩展性；快速与新的底层引擎集成",
        "controllability": "融合引擎入口，统一身份验证，高风险防控，审计记录；基于标签的多级精细化资源控制和恢复能力",
        "orchestration": "基于双活、混合计算、事务Orchestrator服务的计算策略设计",
        "reusability": "大大减少了上层应用开发的后端开发工作量；可基于Linkis快速高效搭建数据平台工具套件"
      }
    }
  },
  "menu": {
    "item":{
      "home": "首页",
      "docs":"文档",
      "faq": "FAQ",
      "download":"下载",
      "blog":"博客",
      "team":"团队"
    },
    "links":{
      "documentation":"文档",
      "events":"动态",
      "releases":"版本",
      "community":"社区",
      "issue_tracker":"Issue追踪",
      "pull_requests":"Pull Request",
      "asf":"ASF",
      "foundation":"基金会",
      "license":"证书",
      "sponsorship":"赞助",
      "thanks":"致谢"
    }
  }
}
